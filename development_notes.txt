Development Notes:
- Attempt 1: Tried just sending the raw PDF to the OpenAI API; met with this error: 
    {'role': 'assistant', 'message': 'It seems there was an issue accessing the content of the PDF you uploaded, as it returned no contents. This might be due to the file being empty, corrupt, or in a format that the tool cannot parse correctly. Could you please check the file on your end and try uploading it again if possible? If the file is sensitive and you need a secure method for another attempt, please proceed accordingly.'}
- Attempt 2: Tried it again 
    - The second time I ran the same exact query it succeeded, but just summarized the code. 
    - {'role': 'assistant', 'message': 'Here are the contents of the PDF titled "Laws of the Seven Kingdoms" formatted according to the Document function specifications:\n\n```plaintext\nTitle: Laws of the Seven Kingdoms\n\n1. Peace\n   - The law requires petty lords and landed knights to take their disputes to their liege lord and abide by his judgment, while disputes between great houses were adjudicated by the Crown.\n\n2. Religion\n   - King Maegor raised a set of laws which forbade holy men from carrying arms.\n\n3. Widows\n   - The Widow\'s Law reaffirms the right of the eldest son (or eldest daughter if there are no sons) to inherit. However, the law requires the heirs to maintain their father\'s surviving widow no matter whether she had been a second, third, or even later wife under the same conditions as she had been before her husband’s death. The widows could no longer be driven from their late husband’s castle, deprived of her servants or possessions, or her income. The law similarly prevented men from disinheriting the children from an earlier marriage in favor of children from a later marriage.\n\n4. Trials\n   - Trials of the Crown often begin with a prayer from a septon beseeching the Father Above to guide them towards justice. The accused and witnesses are sworn to honesty before giving testimony at a trial. The accused is allowed to be present as witnesses give their testimony in front of one or multiple judges.\n   - Trials by combat allow any knight accused of wrongdoing to demand a trial by combat. The right also extends to nobles who are not knighted. The accused and accusers are allowed to have champions fight in their place. When a person is killed in a trial by combat, by law, it is not considered murder. A more ancient custom, though seldom used, is a trial of seven in which seven men fight on the side of the accusing party and seven on the side of the accused party. When the person who stands accused is royalty, their champion has to be a knight of the Kingsguard. When the accuser is royalty, however, they are within their rights to select a champion who is not a sworn member of the Kingsguard.\n\n5. Taxes\n   - In the Seven Kingdoms, taxes are collected locally. Lords pay taxes to the crown. The Great Houses gather the taxes from their region, which are subsequently paid to the Crown. An exception is taxes owed to the Night’s Watch by the villages and holdfasts located in the New Gift, which are paid in kind, not in gold.\n\n6. Thievery\n   - Thieves are customarily punished by losing a finger or a hand. Pickpockets can be punished by cutting off a hand. Those who steal from a sept can be considered to have stolen from the gods and thus receive a harsher punishment.\n\n7. Poaching\n   - Poaching is forbidden. Lords are generally not tolerant towards poachers and punishments for poaching can include being forced to join the Night\'s Watch, losing a hand, or being forced to row ships.\n\n8. Outlawry\n   - Outlaws are generally sentenced to death by hanging.\n\n9. Slavery\n   - Slavery is illegal in the Seven Kingdoms. Both the old gods and the Faith of the Seven consider slavery to be an abomination, and as such, there have been no slaves in the Seven Kingdoms for thousands of years. The punishment for selling people in the Seven Kingdoms is execution.\n\n10. Watch\n    - An alternative for most punishments is joining the Night\'s Watch. Debtors, poachers, thieves, and murderers are among those who might be forced to join the black brothers on the Wall. Men of the Night\'s Watch are required to swear a vow by which means their crimes are washed away and all debts are forgiven. Breaking the oath made to the Night\'s Watch is punishable by death. Refusing orders made by the Lord Commander of the Night\'s Watch can also be punishable by death. Women are not allowed to join the Night\'s Watch.\n\n11. Baking\n    - A baker who mixes sawdust in his flour might be fined. If such a fine cannot be paid, he might be whipped instead.\n\nCitations:\n- https://scholarcommons.sc.edu/cgi/viewcontent.cgi?article=4273&context=sclr\n- https://awoiaf.westeros.org/index.php/Laws_and_justice_of_the_Seven_Kingdoms\n- https://gameofthrones.fandom.com/wiki/Laws_and_customs\n```\n\nThis summarization captures all the key points and laws summarized in the original document.'}
    - This was not parsed into the format needed, so I decided to remove the 'retrieval' function from the assistant. 
- Attempt 3: Updating prompt to be more specific about extraction
    - This resulted in it telling me it couldn't extract the text from the document (which it had before), and asked me if it should use OCR. 
- Attempt 3: Tell it to use OCR
    - ThreadMessage(id='msg_GsnTl9QGz3Vzc7bJEeT7FVz8', assistant_id='asst_EdXuqjDTWZNzdugA5tZ3tmXL', content=[MessageContentText(text=Text(annotations=[], value='The PDF appears to contain no extractable text using the method attempted. This can happen with certain PDFs, especially those that are scanned images rather than text-based documents. \n\nGiven this outcome, we might need to apply a different approach, such as using OCR (Optical Character Recognition) to extract the text from the PDF. Would you like me to proceed with an OCR-based extraction method?'), type='text')], created_at=1707163189, file_ids=[], metadata={}, object='thread.message', role='assistant', run_id='run_mpFejPepoEvBTruHzjx7rgfb', thread_id='thread_hbdQfz0JJ39Yd8ILGWLbcgFF')
    - It seems it was unable to parse the results, so I added to the prompt "Use OCR if needed"
    - This seemed to fail. 
- Attempt 4: Use Apache Tika with OCR to make XHTML and ask ChatGPT to parse it
    - This resulted in ChatGPT getting confused about tags
        ThreadMessage(id='msg_FsF3j4c15PZtik43s8Wo9kGv', assistant_id='asst_cS08Saa9bAONPhH01yuMDNVG', content=[MessageContentText(text=Text(annotations=[], value="The approach to parse sections based on numeric identifiers at the beginning of `div` and `p` elements did not yield any results. This suggests that either the elements do not start with the expected numeric enumerations, or the structure is more complex than anticipated.\n\nGiven these outcomes, it appears necessary to reevaluate the document's structure or explore different strategies for parsing. Without clear indicators such as `h1` tags or consistent numeric identifier patterns, accurately parsing the content into enumeration, title, and text based purely on the information provided might be challenging.\n\nAs an alternative strategy, I recommend manually checking the document to identify any specific patterns or structures that we might have overlooked. If the structure could be clearly defined or examples of section headers and text could be provided, it would significantly help in devising a more accurate parsing logic.\n\nFor now, would you like to specify any additional details observed in your document that might assist in parsing, or would you like advice on another approach?"), type='text')], created_at=1707191185, file_ids=[], metadata={}, object='thread.message', role='assistant', run_id='run_BQZX6D4ZAO0VhufhIft8Kxt6', thread_id='thread_BBlVaADHCK7IBgrRWNmWREGR')
        ThreadMessage(id='msg_ZaBpxBKOgy48G2iHeMhHePFa', assistant_id='asst_cS08Saa9bAONPhH01yuMDNVG', content=[MessageContentText(text=Text(annotations=[], value='After inspecting the first few `div` and `p` elements, it seems that the `div` elements may contain the main structure of the document, with one `div` including a clear heading-like text "Laws of the Seven Kingdoms" followed by numeric identifiers (enumeration) and some introductory text. This suggests that sections and their titles might indeed be structured within `div` elements, or that `p` elements within `div` elements could be playing a key role in detailing the sections.\n\nThe `p` elements also include content that starts with numeric identifiers, suggesting they could contain the main text of each section, possibly following an enumeration pattern.\n\nBased on this observation, a strategy to parse the document might involve using `div` elements to identify each section, we may consider a combination of `div` and potentially `p` elements to capture the enumeration, title, and text of each section. However, given the varied content, determining the exact structure may require a more detailed examination.\n\nFor a more targeted approach, let\'s attempt to parse the document by treating each `div` and `p` element that starts with a numeric identifier as a potential section header and following text as the section content, respectively.'), type='text')], created_at=1707191154, file_ids=[], metadata={}, object='thread.message', role='assistant', run_id='run_BQZX6D4ZAO0VhufhIft8Kxt6', thread_id='thread_BBlVaADHCK7IBgrRWNmWREGR')
        ThreadMessage(id='msg_TamnAfk8IPqCO3h5rWlhKRmp', assistant_id='asst_cS08Saa9bAONPhH01yuMDNVG', content=[MessageContentText(text=Text(annotations=[], value="The HTML document primarily uses the following tags: `a`, `body`, `div`, `head`, `html`, `meta`, `p`, and `title`. Since there were no `h1` tags found in the document, this suggests that the content might be organized differently, possibly with `div` or `p` tags playing a key role.\n\nGiven this information, a more nuanced approach is required to accurately parse the document. I will inspect the use of `div` and `p` tags and attempt to identify a pattern that might indicate the structure of sections and their titles. Let's start by inspecting the hierarchy and content of the first few `div` and `p` elements to deduce a pattern."), type='text')], created_at=1707191130, file_ids=[], metadata={}, object='thread.message', role='assistant', run_id='run_BQZX6D4ZAO0VhufhIft8Kxt6', thread_id='thread_BBlVaADHCK7IBgrRWNmWREGR')
        ThreadMessage(id='msg_JFG1VHLboUM9iE3HQaGzTdRa', assistant_id='asst_cS08Saa9bAONPhH01yuMDNVG', content=[MessageContentText(text=Text(annotations=[], value="It appears that no sections were detected using the initial approach, which looked for `h1` tags and then collected immediately following `p` tag contents. This suggests that the structure of the HTML file might be different from what was expected.\n\nGiven this, I'll take another approach to inspect the structure of the HTML document to better understand how the information is organized. Let's start by getting a brief overview of the structure, including the tags used to organize the content."), type='text')], created_at=1707191120, file_ids=[], metadata={}, object='thread.message', role='assistant', run_id='run_BQZX6D4ZAO0VhufhIft8Kxt6', thread_id='thread_BBlVaADHCK7IBgrRWNmWREGR')
        ThreadMessage(id='msg_fMA5rFN4AwhnARmEPuqL1ZhC', assistant_id=None, content=[MessageContentText(text=Text(annotations=[], value='Please parse the attached HTML file and return the contents as JSON objects with the following properties: filename, enumeration, title, and text.'), type='text')], created_at=1707191100, file_ids=[], metadata={}, object='thread.message', role='user', run_id=None, thread_id='thread_BBlVaADHCK7IBgrRWNmWREGR')
- Attempt 5: Use Apache Tika with OCR to parse document to text and then ask ChatGPT to parse the results
    - Ultimately ChatGPT was able to parse the document, but it wasn't able to break up the text well enough to create the desired document structure
    - ThreadMessage(id='msg_FMxXbKoaZb8FNXmh1VwVmFUB', assistant_id='asst_rmBEoGmNN6qlE1fAM7we2JzD', content=[MessageContentText(text=Text(annotations=[], value='The contents of the document have been parsed and structured into JSON objects as requested. Here are the first 5 objects:\n\n```json\n[\n  {\n    "filename": "file-XPn4IPfUkq6HcTVu5LQ0i0OV",\n    "enumeration": "2.",\n    "title": "Religion 2.1. king Maegor raised a set of laws which forbade holy men from carrying arms",\n    "text": ""\n  },\n  {\n    "filename": "file-XPn4IPfUkq6HcTVu5LQ0i0OV",\n    "enumeration": "3.",\n    "title": "Widows 3.1. The Widow\'s Law reaffirms the right of the eldest son (or eldest daughter, if there",\n    "text": "are no sons) to inherit. 3.1.1. However, the law requires the heirs to maintain their father\'s surviving widow, no matter whether she had been a second, third, or even later wife, under the same conditions as she had been before her husband’s death. 3.1.2. The widows could no longer be driven from their late husband’s castle, deprived of her servants or possessions, or her income. 3.1.3. The law similarly prevented men from disinheriting the children from an earlier marriage in favor of children from a later marriage"\n  },\n  {\n    "filename": "file-XPn4IPfUkq6HcTVu5LQ0i0OV",\n    "enumeration": "4.",\n    "title": "Trials 4.1. Trials of the Crown",\n    "text": "4.1.1. Trials, at least among the nobility, often begin with a prayer from a septon beseeching the Father Above to guide them towards justice. The accused and witnesses are sworn to honesty before he gives testimony at a trial. The accused is allowed to be present as witnesses give their testimony, in front of one or multiple judges. 4.2. Trials by combat 4.2.1. Any knight accused of wrongdoing is allowed by law to demand a trial by combat. The right to a trial by combat also extends to nobles who are not knighted. 4.2.2. The accused and accusers are allowed to have champions fight in their place. When a person is killed in a trial by combat, by law it is not considered murder. 4.2.3. A more ancient custom, though seldom used, is a trial of seven, in which seven men fight on the side of the accusing party, and seven on the side of the accused party 4.2.4. When the person who stands accused is royalty, their champion has to be a knight of the Kingsguard. When the accuser is royalty, however, they are within their rights to select a champion who is not a sworn member of the Kingsguard."\n  },\n  {\n    "filename": "file-XPn4IPfUkq6HcTVu5LQ0i0OV",\n    "enumeration": "5.",\n    "title": "Taxes 5.1. In the Seven Kingdoms, taxes are collected locally.",\n    "text": "5.1.1. Lords pay taxes to the crown. 5.1.2. The Great Houses gather the taxes from their region. 5.1.2.1. The Great Houses subsequently pay their taxes to the Crown. An exception are taxes owed to the Night’s Watch by the villages and holdfasts located in the New Gift which are paid in kind, not in gold. 5.2. Lords can have treasurers in their service to handle the incoming taxes. 6. Thievery 6.1. It is customary for a thief to be punished by losing a finger or a hand. 6.2. Pickpockets can likewise be punished by cutting off a hand. 6.3. Those who steal from a sept can be considered to have stolen from the gods, and thus receive a harsher punishment. 7. Poaching 7.1. Poaching is forbidden. Lords are generally not tolerant towards poachers and punishments for poaching can include being forced to join the Night\'s Watch, losing a hand, or being forced to row ships."\n  },\n  {\n    "filename": "file-XPn4IPfUkq6HcTVu5LQ0i0OV",\n    "enumeration": "8.",\n    "title": "Outlawry 8.1. Outlaws are generally sentenced to death by hanging.",\n    "text": ""\n  }\n]\n```\n\nThese objects include properties for filename, enumeration, title, and text, as requested. Please let me know if you need further details or additional information.'), type='text')], created_at=1707192889, file_ids=[], metadata={}, object='thread.message', role='assistant', run_id='run_bFP2Lk5QWViwKcNtmoVV5rHG', thread_id='thread_xWQq86aoeoLF0UvXmWa8UTUO')
    - ThreadMessage(id='msg_gGPeknLiDAdRpbD1v98BfDLm', assistant_id='asst_rmBEoGmNN6qlE1fAM7we2JzD', content=[MessageContentText(text=Text(annotations=[], value="The structure of the document appears to follow a pattern where each section is identified by an enumeration followed by a title, and subsequent texts are related to these sections, often nested with additional enumerations for sub-sections. \n\nTo convert this into JSON objects with the properties: filename, enumeration, title, and text, we'll parse the file contents accordingly."), type='text')], created_at=1707192866, file_ids=[], metadata={}, object='thread.message', role='assistant', run_id='run_bFP2Lk5QWViwKcNtmoVV5rHG', thread_id='thread_xWQq86aoeoLF0UvXmWa8UTUO')
- Attempt 6: Use Regex to break up the document. 
    - With some help from ChatGPT, I developed a parser that broke up the text into sections based on the enumerations. 
    - However, it treated the document title as text. 
    - Ultimately, though, it was sufficient to populate the Document model, albeit not being as scalable to future document classes, and not differentiating document title. 
